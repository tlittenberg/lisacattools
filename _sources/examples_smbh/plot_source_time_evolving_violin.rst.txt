
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_smbh/plot_source_time_evolving_violin.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_smbh_plot_source_time_evolving_violin.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_smbh_plot_source_time_evolving_violin.py:


Time-evolving violin plot
=================================

Violin plot of select parameters for a single source showing how
parameter estimation changes with observing time over all observing epochs

.. GENERATED FROM PYTHON SOURCE LINES 9-29

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns

    from lisacattools.catalog import GWCatalogs
    from lisacattools.catalog import GWCatalogType

    # get list catalog files
    catPath = "../../tutorial/data/mbh"
    catalogs = GWCatalogs.create(GWCatalogType.MBH, catPath, "*.h5")

    last_cat = catalogs.get_last_catalog()
    detections_attr = last_cat.get_attr_detections()
    detections = last_cat.get_detections(detections_attr)

    detections = detections.sort_values(by="Mass 1")
    detections[
        ["Parent", "Log Likelihood", "Mass 1", "Mass 2", "Luminosity Distance"]
    ]






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Parent</th>
          <th>Log Likelihood</th>
          <th>Mass 1</th>
          <th>Mass 2</th>
          <th>Luminosity Distance</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>MBH010993271</th>
          <td>MBH010993145</td>
          <td>58.644439</td>
          <td>6043.582334</td>
          <td>1484.773218</td>
          <td>22.671702</td>
        </tr>
        <tr>
          <th>MBH006058694</th>
          <td>MBH006058694</td>
          <td>119.338404</td>
          <td>10349.085349</td>
          <td>3303.282920</td>
          <td>47.235091</td>
        </tr>
        <tr>
          <th>MBH000373540</th>
          <td></td>
          <td>60.282950</td>
          <td>11191.400618</td>
          <td>1573.347120</td>
          <td>22.205113</td>
        </tr>
        <tr>
          <th>MBH002301433</th>
          <td></td>
          <td>67.615841</td>
          <td>12659.907280</td>
          <td>3912.600441</td>
          <td>34.400859</td>
        </tr>
        <tr>
          <th>MBH005546845</th>
          <td>MBH005546845</td>
          <td>652.996924</td>
          <td>13238.473697</td>
          <td>2707.606755</td>
          <td>30.323258</td>
        </tr>
        <tr>
          <th>MBH004556400</th>
          <td>MBH004556400</td>
          <td>243.337498</td>
          <td>15868.967713</td>
          <td>9036.333963</td>
          <td>28.921349</td>
        </tr>
        <tr>
          <th>MBH004650719</th>
          <td>MBH004650719</td>
          <td>446.562104</td>
          <td>22450.923508</td>
          <td>8796.170612</td>
          <td>59.148264</td>
        </tr>
        <tr>
          <th>MBH001865195</th>
          <td>MBH001865195</td>
          <td>164.506458</td>
          <td>24034.822836</td>
          <td>8748.509775</td>
          <td>95.079793</td>
        </tr>
        <tr>
          <th>MBH007449510</th>
          <td>MBH007449510</td>
          <td>72.207804</td>
          <td>38276.504295</td>
          <td>2615.575967</td>
          <td>100.930430</td>
        </tr>
        <tr>
          <th>MBH006253789</th>
          <td>MBH006253789</td>
          <td>260.016246</td>
          <td>51499.191655</td>
          <td>5166.812496</td>
          <td>24.506354</td>
        </tr>
        <tr>
          <th>MBH011318669</th>
          <td>MBH011317078</td>
          <td>740.270521</td>
          <td>142698.356416</td>
          <td>31498.663144</td>
          <td>13.886229</td>
        </tr>
        <tr>
          <th>MBH007807200</th>
          <td>MBH007807200</td>
          <td>189597.629550</td>
          <td>641359.177017</td>
          <td>83719.952286</td>
          <td>14.897055</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 30-31

Choose a source from the list of detections and get its history through the different catalogs

.. GENERATED FROM PYTHON SOURCE LINES 31-63

.. code-block:: default


    # Pick a source, any source
    sourceIdx = "MBH005546845"

    # Get source history and display table with parameters and observing weeks containing source
    srcHist = catalogs.get_lineage(last_cat.name, sourceIdx)
    srcHist.drop_duplicates(subset="Log Likelihood", keep="last", inplace=True)
    srcHist.sort_values(by="Observation Week", ascending=True, inplace=True)
    srcHist[
        [
            "Observation Week",
            "Parent",
            "Log Likelihood",
            "Mass 1",
            "Mass 2",
            "Luminosity Distance",
        ]
    ]

    allEpochs = catalogs.get_lineage_data(srcHist)

    # For plotting purposes, we add a new parameter that is merger time error (in hours), expressed relative to median merger time after observation is complete
    latestWeek = np.max(allEpochs["Observation Week"])
    allEpochs["Merge Time Error"] = (
        allEpochs["Barycenter Merge Time"]
        - np.median(
            allEpochs[allEpochs["Observation Week"] == latestWeek][
                "Barycenter Merge Time"
            ]
        )
    ) / 3600








.. GENERATED FROM PYTHON SOURCE LINES 64-66

Create the violin plot
select the parameters to plot and scaling (linear or log) for each

.. GENERATED FROM PYTHON SOURCE LINES 66-99

.. code-block:: default

    params = [
        "Mass 1",
        "Mass 2",
        "Spin 1",
        "Spin 2",
        "Luminosity Distance",
        "Merge Time Error",
    ]
    scales = ["log", "log", "linear", "linear", "linear", "linear"]

    # arrange the plots into a grid of subplots
    ncols = 2
    nrows = int(np.ceil(len(params) / ncols))
    fig = plt.figure(figsize=[10, 10], dpi=100)

    # plot the violin plot for each parameter
    for idx, param in enumerate(params):
        ax = fig.add_subplot(nrows, ncols, idx + 1)
        sns.violinplot(
            ax=ax,
            x="Observation Week",
            y=param,
            data=allEpochs,
            scale="width",
            width=0.8,
            inner="quartile",
        )
        ax.set_yscale(scales[idx])
        ax.grid(axis="y")

    # add an overall title
    fig.suptitle("Parameter Evolution for %s" % sourceIdx)
    plt.show()



.. image:: /examples_smbh/images/sphx_glr_plot_source_time_evolving_violin_001.png
    :alt: Parameter Evolution for MBH005546845
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  17.312 seconds)


.. _sphx_glr_download_examples_smbh_plot_source_time_evolving_violin.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_source_time_evolving_violin.py <plot_source_time_evolving_violin.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_source_time_evolving_violin.ipynb <plot_source_time_evolving_violin.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
